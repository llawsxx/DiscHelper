<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DiscHelperMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAA
</value>
  </data>
</root>